{"version":3,"file":"useElementRef.js","sourceRoot":"","sources":["../src/useElementRef.ts"],"names":[],"mappings":";;;AAAA,+BAAwC;AACxC,+BAA+D;AAExD,IAAM,aAAa,GAAG,UAAC,EAAgE;QAA9D,kBAAkB,wBAAA,EAAE,cAAc,oBAAA,EAAE,EAAE,QAAA;IACpE,IAAM,GAAG,GAAG,IAAA,cAAM,GAAkB,CAAC;IAErC,IAAM,OAAO,GAAG,IAAA,eAAO,EACrB,cAAM,OAAA,IAAA,sBAAe,EAAC,EAAE,cAAc,gBAAA,EAAE,kBAAkB,oBAAA,EAAE,EAAE,IAAA,EAAE,CAAC,EAA3D,CAA2D,EACjE,CAAC,kBAAkB,EAAE,cAAc,EAAE,EAAE,CAAC,CACzC,CAAC;IAEF,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;IAEtB,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAXW,QAAA,aAAa,iBAWxB","sourcesContent":["import { useRef, useMemo } from 'react';\nimport { CreateContainerProps, createContainer } from './util';\n\nexport const useElementRef = ({ containerClassName, containerStyle, id }: CreateContainerProps) => {\n  const ref = useRef<HTMLDivElement>();\n\n  const element = useMemo(\n    () => createContainer({ containerStyle, containerClassName, id }),\n    [containerClassName, containerStyle, id],\n  );\n\n  ref.current = element;\n\n  return ref;\n};\n"]}